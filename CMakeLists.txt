CMAKE_MINIMUM_REQUIRED (VERSION 2.8)
PROJECT (mechanic)

SET (Mechanic_VERSION_MAJOR 0)
SET (Mechanic_VERSION_MINOR 12)
SET (Mechanic_VERSION_PATCH 7)
SET (Mechanic_VERSION_API 0120364)

SET (package_version
  "\"${Mechanic_VERSION_MAJOR}.${Mechanic_VERSION_MINOR}.${Mechanic_VERSION_PATCH}\"")

SET (package_name "\"${CMAKE_PROJECT_NAME}\"")
SET (package_author "\"Celestial Mechanics Group (TCFA/NCU)\"")
SET (package_bugs "\"mechanics@astri.umk.pl\"")
SET (package_url "\"http://git.astri.umk.pl/projects/mechanic\"")
SET (package_version_major "\"${Mechanic_VERSION_MAJOR}\"")
SET (package_version_minor "\"${Mechanic_VERSION_MINOR}\"")
SET (package_version_patch "\"${Mechanic_VERSION_PATCH}\"")
SET (package_version_api "\"${Mechanic_VERSION_API}\"")

IF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  SET (platform_darwin 1)
  SET (platform_linux 0)
ENDIF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

IF (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  SET (platform_darwin 0)
  SET (platform_linux 1)
ENDIF (${CMAKE_SYSTEM_NAME} MATCHES "Linux")

OPTION (BUILD_FORTRAN "Build Fortran bindings" OFF)

IF (BUILD_FORTRAN)
  ENABLE_LANGUAGE (Fortran)
ENDIF (BUILD_FORTRAN)

LIST (APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

INCLUDE (MechanicIncludes)
INCLUDE (MechanicLibraryExists)
INCLUDE (CheckCSourceCompiles)

CHECK_INCLUDE_FILES (stdio.h HAVE_STDIO_H)
CHECK_INCLUDE_FILES (dlfcn.h HAVE_DLFCN_H)
CHECK_INCLUDE_FILES (stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILES (locale.h HAVE_LOCALE_H)
CHECK_INCLUDE_FILES (memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES (stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILES (inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES (strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILES (string.h HAVE_STRING_H)
CHECK_INCLUDE_FILES (sys/stat.h HAVE_STAT_H)
CHECK_INCLUDE_FILES (sys/types.h HAVE_TYPES_H)
CHECK_INCLUDE_FILES (unistd.h HAVE_UNISTD_H)
CHECK_INCLUDE_FILES (popt.h HAVE_POPT_H)
CHECK_INCLUDE_FILES (math.h HAVE_MATH_H)
CHECK_INCLUDE_FILES (hdf5.h HAVE_HDF5_H)
CHECK_INCLUDE_FILES (libreadconfig.h HAVE_LRC_H)
CHECK_INCLUDE_FILES (libreadconfig_hdf5.h HAVE_LRC_HDF5_H)

CHECK_LIBRARY_EXISTS (dl dlopen "" HAVE_DLFCN_LIB)
CHECK_LIBRARY_EXISTS (hdf5 H5Dopen2 "" HAVE_HDF5_LIB)
CHECK_LIBRARY_EXISTS (m pow "" HAVE_M_LIB)
CHECK_LIBRARY_EXISTS (popt poptGetContext "" HAVE_POPT_LIB)
CHECK_LIBRARY_EXISTS (readconfig LRC_HDF5Writer "" HAVE_LRC_HDF5_LIB)

CONFIGURE_FILE (
  ${CMAKE_CURRENT_SOURCE_DIR}/src/config.h.in 
  ${CMAKE_CURRENT_BINARY_DIR}/src/config.h
)

ADD_DEFINITIONS (-DHAVE_CONFIG_H)

# C Compiler flags
IF (${CMAKE_C_COMPILER_ID} STREQUAL "GNU")
  SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -std=c99")
ELSEIF (${CMAKE_C_COMPILER_ID} STREQUAL "Intel")
  SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -std=c99")
ELSE (${CMAKE_C_COMPILER_ID} STREQUAL "GNU")
  SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -std=c99")
ENDIF (${CMAKE_C_COMPILER_ID} STREQUAL "GNU")

# Fortran Compiler flags
IF (BUILD_FORTRAN)
  IF (${CMAKE_Fortran_COMPILER_ID} STREQUAL "GNU")
    SET (CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -I. -std=f2003")
  ELSEIF (${CMAKE_Fortran_COMPILER_ID} STREQUAL "Intel")
    SET (CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -I. -stand f03")
  ELSE (${CMAKE_Fortran_COMPILER_ID} STREQUAL "GNU")
    SET (CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -I. -std=f2003")
  ENDIF (${CMAKE_Fortran_COMPILER_ID} STREQUAL "GNU")
ENDIF (BUILD_FORTRAN)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(src/core)
ADD_SUBDIRECTORY(src/modes)
ADD_SUBDIRECTORY(src/modules)

IF (BUILD_FORTRAN)
  ADD_SUBDIRECTORY(src/fortran)
ENDIF (BUILD_FORTRAN)

SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY "Mechanic")
SET (CPACK_PACKAGE_VENDOR "Celestial Mechanics Group (TCFA/NCU)")
SET (CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.txt")
SET (CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.txt")
SET (CPACK_PACKAGE_VERSION_MAJOR "${Mechanic_VERSION_MAJOR}")
SET (CPACK_PACKAGE_VERSION_MINOR "${Mechanic_VERSION_MINOR}")
SET (CPACK_PACKAGE_VERSION_PATCH "${Mechanic_VERSION_PATCH}")
SET (CPACK_PACKAGE_INSTALL_DIRECTORY "/usr/local")
SET (CPACK_SOURCE_PACKAGE_FILE_NAME
  "${CMAKE_PROJECT_NAME}-${Mechanic_VERSION_MAJOR}.${Mechanic_VERSION_MINOR}.${Mechanic_VERSION_PATCH}")
SET (CPACK_SOURCE_IGNORE_FILES
  "/build/;/.DS_Store;/.gitignore;/.git/;~$;${CPACK_SOURCE_IGNORE_FILES}")

INCLUDE (CPack)

ADD_CUSTOM_TARGET (dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)

