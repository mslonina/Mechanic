{"name":"Mechanic","body":"### Overview\r\nThe aim of the Mechanic is to help in conducting massive numerical simulations. It provides tools to help you focus on numerical problem: the storage, checkpoints (backups, restarts), setup, command-line, splitting the workload, CPU-communication etc. is handled by the core code. The rest is in user-supplied module.\r\n\r\n### Key features\r\n* Core-module architecture -- the numerical code separated from the communication and storage layers\r\n* C-based user-supplied modules, which allows to connect several C-interoperable programming languages (such as C++, OpenCl, CUDA, partly Fortran2003+)\r\n* Task farm communication pattern (on top of the MPI2 standard), working well on large CPU-clusters, PC-workstations or laptops \r\n* Unified data management (on top of the HDF5 library) with storage scheme implemented through the rich user API\r\n* The module setup implemented through the API (among with the command-line options)\r\n* No MPI or HDF5 knowledge required\r\n* Pool-based task farm, task pools created on-the-fly, based on data from previous pools (example: Genetic Algorithms)\r\n* Several storage types, which allows to store result data for different purposes (example: Dynamical Maps)\r\n* Custom storage scheme per pool\r\n\r\n### Sample module\r\n\r\n```\r\n#include \"MMechanic2.h\"\r\n\r\nint Storage(pool *p) {\r\n  p->task->storage[0].layout = (schema) {\r\n    .path = \"conditions\";\r\n    .dataspace_type = H5S_SIMPLE;\r\n    .datatype = H5T_NATIVE_DOUBLE;\r\n    .rank = 2;\r\n    .dim[0] = 5;\r\n    .dim[1] = 6;\r\n    .use_hdf = 1;\r\n  return 0;\r\n}\r\n\r\nint TaskProcess(pool *p, task *t, setup *s) {\r\n t->storage[0].data[0][4] = 123.45;\r\n return 0;\r\n}\r\n```\r\n\r\n### Authors\r\n\r\n* Mariusz Słonina, _Toruń Centre for Astronomy, NCU_ (Maintainer)\r\n* Krzysztof Goździewski, _Toruń Centre for Astronomy, NCU_\r\n* Cezary Migaszewski, _Toruń Centre for Astronomy, NCU_\r\n\r\n### Acknowledgements\r\n\r\nThis project is supported by the Polish Ministry of Science and Higher Education through the grant N/N203/402739. This work is conducted within the POWIEW project of the European Regional Development Fund in Innovative Economy Programme POIG.02.03.00-00-018/08.\r\n\r\n","tagline":"The MPI task management system for the dynamical astronomy","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}